@{
    ViewData["Title"] = "Home Page";

}

<div class="placeholders mb-2">
    <div class="row d-flex justify-content-start">
        <div class="col-md-2 mb-3 placeholder">
            <img class="img-fluid " alt="200x200" src="~/Images/200.png">
        </div>
        <div class="col-md-3">
            <h2>Lorem ipsum dolor sit amet...</h2>
            <p>
                Lorem Ipsum is simply dummy text of the printing and typesetting industry.
                Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a
                galley of type and scrambled it to make a type specimen book.
            </p>
            <p>
                <kendo-button name="PrimaryButton" class="textButton k-primary">Primary Button</kendo-button>
            </p>
        </div>
        <div class="col-md-3">
            <h2>&nbsp;</h2>
            <p>
                Lorem Ipsum is simply dummy text of the printing and typesetting industry.
                Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a
                galley of type and scrambled it to make a type specimen book.
            </p>
            <p>
                <kendo-button name="TextButton" class="textButton">Button</kendo-button>
            </p>
        </div>
        <div class="col-md-3">
            <h2>&nbsp;</h2>
            <p>
                Lorem Ipsum is simply dummy text of the printing and typesetting industry.
                Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a
                galley of type and scrambled it to make a type specimen book.
            </p>
            <p>
                <kendo-button name="Button" class="textButton">Button</kendo-button>
            </p>
        </div>
    </div>
</div>

@*<div class="row">
    <div class="col-12">
        <kendo-grid name="grid" height="550">
            <columns>
                <column field="OrderID" title="Order ID">
                    <filterable enabled="false"></filterable>
                </column>
                <column field="Freight" title="Freight" />
                <column field="OrderDate" title="Order Date" format="{0:MM/dd/yyyy}" />
                <column field="ShipName" title="Ship Name" />
                <column field="ShipCity" title="Ship City" />
            </columns>
            <scrollable enabled="true" />
            <sortable enabled="true" />
            <pageable enabled="true" />
            <filterable enabled="true" />
            <datasource type="DataSourceTagHelperType.Ajax" page-size="20">
                <transport>
                    <read url="@Url.Action("Orders_Read", "Grid")" />
                </transport>
            </datasource>
        </kendo-grid>

    </div>
</div>*@

@(Html.Kendo().Grid<Services.Dtos.CustomersDto>()
      .Name("grid_customers")
      .Columns(columns =>  {

          columns.AutoGenerate(true);
          columns.Command(command => { command.Edit(); command.Destroy(); }).Width(160);
      })
      .ToolBar(tools =>
      {
          tools.Create();
      })
      
      .Editable(editable => editable.Mode(GridEditMode.InLine))
      .Sortable()
      .Pageable()
      .Filterable()      
      .DataSource(dataSource =>
          dataSource
            
            .WebApi()
            .Model(model =>
            {
                model.Id(p => p.CustomerId);
            })
            .Read(read => read.Action("Get", "Customers"))
            .Create(create => create.Action("Post", "Customers"))
            .Update(update => update.Action("Put", "Customers", new { id = "{0}" }))
            .Destroy(destroy => destroy.Action("DELETE", "Customers", new { id = "{0}" }))
      )
)


@*@(Html.Kendo().Grid<Modelos.Modelos.Customers>()
      .Name("grid_customers")
      .Columns(columns =>
      {
          columns.Bound(p => p.Date);
          columns.Bound(p => p.TemperatureC).Width(100);
          columns.Bound(p => p.TemperatureF).Width(100);
          columns.Bound(p => p.Summary).Width(100);
          columns.Command(command => { command.Edit(); command.Destroy(); }).Width(250);
      })
      .ToolBar(tools =>
      {
          tools.Create();
      })
      .Sortable()
      .Pageable()
      .Filterable()
      .DataSource(dataSource =>
          dataSource
            .WebApi()
            .Model(model =>
            {
                model.Id(p => p.ProductID);
            })
            .Events(events => events.Error("error_handler"))
            .Read(read => read.Action("Get", "Product"))
            .Create(create => create.Action("Post", "Product"))
            .Update(update => update.Action("Put", "Product", new { id = "{0}" }))
            .Destroy(destroy => destroy.Action("DELETE", "Product", new { id = "{0}" }))
      )
)*@



@*<div class="row">
        <div class="col-12">
            <kendo-grid name="grid" height="550">

                <scrollable enabled="true" />
                <sortable enabled="true" />
                <pageable enabled="true" />
                <filterable enabled="true" />
                <datasource type="DataSourceTagHelperType.WebApi" page-size="20">
                    <transport>
                        <read url="@Url.RouteUrl.Action("Orders_Read", "Grid")" />
                    </transport>
                </datasource>
            </kendo-grid>

        </div>
    </div>*@